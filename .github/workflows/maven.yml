name: Java CI with Maven
run-name: ${{ github.actor }} is learning GitHub Actions
on:
  push:
    branches: [ aws_deployment ]
  pull_request:
    branches: [ aws_deployment ]
env:
  AWS_REGION: us-east-1
  S3BUCKET: backendstack-webappdeploymentbucket-syra8jgi1ey9
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IL_MIO_ROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Create mongo Docker container
        uses: DigiPie/mongo-action@v2.0.1
        with:
          image_version: latest
          port: 27017
      - name: Install mongosh command
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
      - name: Test mongo connection
        run: "sudo mongosh localhost:27017"

      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          cache: maven
      - name: Clean & install with Maven
        run: mvn clean install -DDB_HOST=localhost
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DDB_HOST=localhost
      - name: Upload Artifact to s3
        working-directory: core/target/
        run: aws s3 cp *.jar s3://${{ env.S3BUCKET }}/

  deploy:
        needs: build
        runs-on: ubuntu-latest
        environment: Dev
        permissions:
          id-token: write
          contents: read
        steps:
          - uses: actions/checkout@v2
          - uses: aws-actions/configure-aws-credentials@v1
            with:
              role-to-assume: ${{ secrets.IL_MIO_ROLE_GITHUB }}
              role-session-name: GitHub-Action-Role
              aws-region: ${{ env.AWS_REGION }}
          - run: |
              echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
              commit_hash=`git rev-parse HEAD`
              aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
              
